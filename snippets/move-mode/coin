# -*- mode: snippet -*-
# name: coin
# key: coin
# --
coin::${1:$$(yas-choose-value '(
"paired_metadata"
"create_coin_conversion_map"
"create_pairing"
"is_apt"
"create_and_return_paired_metadata_if_not_exist"
"ensure_paired_metadata"
"paired_coin"
"coin_to_fungible_asset"
"fungible_asset_to_coin"
"assert_paired_metadata_exists"
"paired_mint_ref_exists"
"get_paired_mint_ref"
"return_paired_mint_ref"
"paired_transfer_ref_exists"
"get_paired_transfer_ref"
"return_paired_transfer_ref"
"paired_burn_ref_exists"
"get_paired_burn_ref"
"convert_and_take_paired_burn_ref"
"return_paired_burn_ref"
"borrow_paired_burn_ref"
"initialize_supply_config"
"allow_supply_upgrades"
"initialize_aggregatable_coin"
"is_aggregatable_coin_zero"
"drain_aggregatable_coin"
"merge_aggregatable_coin"
"collect_into_aggregatable_coin"
"calculate_amount_to_withdraw"
"maybe_convert_to_fungible_store"
"migrate_to_fungible_store"
"coin_address"
"balance"
"is_balance_at_least"
"coin_balance"
"is_coin_initialized"
"is_coin_store_frozen"
"is_account_registered"
"name"
"symbol"
"decimals"
"supply"
"coin_supply"
"burn"
"burn_from"
"deposit"
"migrated_primary_fungible_store_exists"
"force_deposit"
"destroy_zero"
"extract"
"extract_all"
"freeze_coin_store"
"unfreeze_coin_store"
"upgrade_supply"
"initialize"
"initialize_with_parallelizable_supply"
"initialize_internal"
"merge"
"mint"
"register"
"transfer"
"value"
"withdraw"
"zero"
"destroy_freeze_cap"
"destroy_mint_cap"
"destroy_burn_cap"
"mint_internal"
"burn_internal"
"Coin"
"AggregatableCoin"
"CoinDeposit"
"CoinWithdraw"
"Deposit"
"Withdraw"
"DepositEvent"
"WithdrawEvent"
"CoinEventHandleDeletion"
"PairCreation"
"MintCapability"
"FreezeCapability"
"BurnCapability"
"MintRefReceipt"
"TransferRefReceipt"
"BurnRefReceipt"
))}($0)